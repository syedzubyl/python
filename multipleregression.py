import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
np.random.seed(0)
X1 = np.random.rand(100, 1)
X2 = np.random.rand(100, 1)
y=3*X1+5*X2+np.random.randn(100, 1)
X=np.hstack((X1, X2))
df = pd.DataFrame(np.hstack((X, y)), columns=['X1', 'X2', 'y'])
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)
model = LinearRegression()
model.fit(X_train, y_train)
y_pred = model.predict(X_test)
print(f'Coefficients:{model.coef_}')
print(f'Intercept:{model.intercept_}')
print(f'Mean squared error:{mean_squared_error(y_test,y_pred)}')
print(f'Coefficient of determination(R^2):{r2_score(y_test, y_pred)}')
plt.figure(figsize=(12,6))
plt.subplot(1,2,1)
plt.scatter(X_test[:,0], y_test, color='black', label='Actual data')
plt.scatter(X_test[:,0], y_pred, color='blue', linewidth=1, label='')
plt.title('X1 vs y')
plt.xlabel('X1')
plt.ylabel('y')
plt.legend()
plt.subplot(1,2,2)
plt.scatter(X_test[:, 1], y_test, color='black', label='Actual data')
plt.scatter(X_test[:, 1], y_pred, color='blue', linewidth=1, label='Predicted data')
plt.title('X2 vs y')
plt.xlabel('X2')
plt.ylabel('y')
plt.legend()
plt.tight_layout()
plt.show()
